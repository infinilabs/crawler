// Code generated by cdpgen. DO NOT EDIT.

// Package systeminfo implements the SystemInfo domain. The SystemInfo domain defines methods and events for querying low-level system information.
package systeminfo

import (
	"context"

	"github.com/mafredri/cdp/protocol/internal"
	"github.com/mafredri/cdp/rpcc"
)

// domainClient is a client for the SystemInfo domain. The SystemInfo domain defines methods and events for querying low-level system information.
type domainClient struct{ conn *rpcc.Conn }

// NewClient returns a client for the SystemInfo domain with the connection set to conn.
func NewClient(conn *rpcc.Conn) *domainClient {
	return &domainClient{conn: conn}
}

// GetInfo invokes the SystemInfo method. Returns information about the system.
func (d *domainClient) GetInfo(ctx context.Context) (reply *GetInfoReply, err error) {
	reply = new(GetInfoReply)
	err = rpcc.Invoke(ctx, "SystemInfo.getInfo", nil, reply, d.conn)
	if err != nil {
		err = &internal.OpError{Domain: "SystemInfo", Op: "GetInfo", Err: err}
	}
	return
}
